earningsOverTimecost <- earningsOverTime[which(earningsOverTime$College %in% collegeToKeep), ]
ggplot(earningsOverTimecost, aes(x=Year, y=e5010, colour=College)) +
geom_line() +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="Year",
y="Median Earnings after 10 years",
title="")
#
# earningsOverTimecost <- earningsOverTime8[which(earningsOverTime8$College %in% collegeToKeep), ]
#
# ggplot(earningsOverTimecost, aes(x=Year, y=e508, colour=College)) +
#   geom_line() +
#   theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
#     labs(x="Year",
#          y="Median Earnings after 8 years",
#          title="")
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
test[grep("Arizona State", test$College),]
ggplot(test, aes(x=Cost, y=e50)) +
geom_point(colour="#425968", alpha=0.2) +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="Cost",
y="Median Earnings after 10 years",
title="Relationship Between Earnings And Cost") +
geom_smooth(method=lm) +
xlim(min(test$Cost, na.rm=TRUE), max(test$Cost, na.rm=TRUE)) + ylim(min(test$Cost, na.rm=TRUE), max(test$e50, na.rm=TRUE)) +
geom_point(aes(Cost[Cost==6603 & e50==89000], e50[Cost==6603 & e50==89000]), colour="#60BD68", shape=1, size=7) +
geom_point(aes(Cost[Cost==60556 & e50==26500], e50[Cost==60556 & e50==26500]), colour="#F15854", shape=1, size=7) +geom_point(aes(Cost[1127], e50[1638]), colour="#F15854", shape=1, size=7)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
ggplot(earningTime[3600:3605,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=Cost-500, ymax=Cost, hjust=0.95, label=paste0("$", Cost)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[3600:3605,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-500, ymax=increaseInEarn, hjust=0.95, label=paste0("$", Cost)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[3600:3605,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-500, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[1:5,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-500, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[1:5,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn+500, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[1:5,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn+2000, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[1:5,], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn+5000, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[1:5,], aes(x=College, y=(increaseInEarn*-1)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("-$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
ggplot(earningTime[1:5,], aes(x=College, y=(increaseInEarn*-1))) +
#make +tive
ggplot(earningTime[1:5,], aes(x=College, y=(increaseInEarn*-1))) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("-$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
test <- earningTime[3600:3605,]
View(test)
test <- test[order(test$increaseInEarn),]
test <- earningTime[3600:3605,]
test <- test[order(test$increaseInEarn),]
ggplot(test, aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
View(test)
test <- earningTime[1:5,]
test$increaseInEarn <- test$increaseInEarn*-1
test <- test[order(test$increaseInEarn),]
ggplot(test, aes(x=College, y=(increaseInEarn*-1))) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("-$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
View(test)
ggplot(test, aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("-$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
test <- earningTime[3600:3605,]
test <- test[order(test$increaseInEarn),]
test$College[which(test$College=="Philadelphia College of Osteopathic Medicine")] <- "Philadelphia College of  \n Osteopathic Medicine "
test$College[which(test$College=="University of Medicine and Dentistry of New Jersey")] <- "University of Medicine and  \n Dentistry of New Jersey"
ggplot(test, aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
View(test)
ggplot(test[order(test$increaseInEarn),], aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
test <- earningTime[1:5,]
test$increaseInEarn <- test$increaseInEarn*-1
test <- test[order(test$increaseInEarn),]
ggplot(test, aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("-$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
topgradient <- earningTime[3600:3605,]
topgradient <- topgradient[order(topgradient$increaseInEarn),]
topgradient$College[which(topgradient$College=="Philadelphia College of Osteopathic Medicine")] <- "Philadelphia College of  \n Osteopathic Medicine "
topgradient$College[which(topgradient$College=="University of Medicine and Dentistry of New Jersey")] <- "University of Medicine and  \n Dentistry of New Jersey"
topgradient <- cbind(Rank=1:nrow(topgradient), topgradient)
topgradient$College <- paste(topgradient$Rank, topgradient$College, sep=". ")
topgradient$College <- factor(topgradient$College, levels=rev(topgradient$College))
ggplot(topgradient, aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Increase In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
botgradient <- earningTime[1:5,]
botgradient$increaseInEarn <- botgradient$increaseInEarn*-1
botgradient <- botgradient[order(botgradient$increaseInEarn),]
botgradient <- cbind(Rank=1:nrow(botgradient), botgradient)
botgradient$College <- paste(botgradient$Rank, botgradient$College, sep=". ")
botgradient$College <- factor(botgradient$College, levels=rev(botgradient$College))
ggplot(botgradient, aes(x=College, y=increaseInEarn)) +
geom_bar(stat="identity", fill="#425968") +
geom_text(aes(x=College, y=increaseInEarn-1000, ymax=increaseInEarn, hjust=0.95, label=paste0("-$", increaseInEarn)), size=3, colour="white") +
theme_ipsum(base_family = "Helvetica Neue", base_size = 12, axis_title_size = 12) +
labs(x="",
y="Decrease In Earnings Between 2007-2011",
title="") +
theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip()
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/03-conc_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/02-Analysis_cache', recursive = TRUE)
unlink('Documents/example_book/reports/exampleReport/01-Overview_cache', recursive = TRUE)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <- x$getinverse()
if(!is.null(i)) {
message("Getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
#test
a <- matrix(c(1,2,3,4), nrow=2, ncol=2)
cacheSolve(a)
a$get()
cachematrix <- makeCacheMatrix(a)
cacheSolve(cachematrix)
cachematrix$get()
cacheSolve(cachematrix)
View(a)
b <- matrix(c(4,4,4,4), nrow=2, ncol=2)
cachematrix <- makeCacheMatrix(b)
cachematrix$get()
cacheSolve(cachematrix)
b <- matrix(c(2,3,4,5), nrow=2, ncol=2)
cachematrix <- makeCacheMatrix(b)
cachematrix$get()
cacheSolve(cachematrix)
cacheSolve(cachematrix)
cachematrix <- makeCacheMatrix(a)
cachematrix$get()
cacheSolve(cachematrix)
cachematrix$getinverse()
a <- matrix(c(1,2,3,4), nrow=2, ncol=2)
cachematrix <- makeCacheMatrix(a)
cachematrix$get()
cacheSolve(cachematrix)
cacheSolve(cachematrix)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
# cacheSolve takes a list of fuctions produced by the makeCacheMatrix function.
# It first returns the current value of i as determined by the makeCacheMatrix function.
# The default value of i is null.
# cacheSolve then checks if i is not null.
# If i is not null the cacheSolve function is ended returning the value of the cached inverse, i.
# Otherwise the matrix x in the makeCacheMatrix function is returned using the get function.
# The inverse of the matrix is calculated and assigned to i.
# i is cached in the makeCacheMatrix function using the setinverse function.
# And the function ends returning i.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <- x$getinverse()
if(!is.null(i)) {
message("Getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
a <- matrix(c(1,2,3,4), nrow=2, ncol=2)
cachematrix <- makeCacheMatrix(a)
cachematrix$get()
cacheSolve(cachematrix)
cacheSolve(cachematrix)
load("~/Downloads/cachematrix.RData")
View(cacheSolve)
View(makeCacheMatrix)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "8146c7591c810054bb83",
secret = "8e5011c6b60fbfdc4378cb43f052fba809446cf7")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
names(req$content)
library(jsonlite)
json1 <-  content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
which(sapply(json1, FUN=function(X) X$name=="datasharing"))
json1[[11]]$name
json1[[11]]$created_at
install.packages("sqldf ")
install.packages("sqldf")
library(sqldf)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "tempfile.csv")
acs <- read.csv("tempfile.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
length(which(acs$pwgtp1))
head(acs$pwgtp1)
sqldf("select distinct AGEP from acs")
sqldf("select unique * from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct pwgtp1 from acs")
test1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
test2 <- sqldf("select distinct pwgtp1 from acs")
test1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
test2 <- sqldf("select distinct AGEP from acs")
test3 <- sqldf("select distinct pwgtp1 from acs")
check <- unique(acs$AGEP)
test2 <- cbind(test2, check)
View(test2)
library(RCurl)
fileURL <- "http://biostat.jhsph.edu/~jleek/contact.html"
xData <- getURL(fileURL)
doc <- xmlParse(xData)
library(XML)
doc <- xmlParse(xData)
??xmlParse
class(xData)
xData <- iconv(xData, "UTF-8", "ASCII", '')
doc <- xmlParse(xData)
xData
write(xData, "file.txt")
library(httr)
doc <- xmlParse(xData)
xData <- content(xData, as="text")
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
doc <- htmlParse(xData)
htmlParsed <- htmlParse(content, asText=TRUE)
doc
htmlParsed
xpathSApply(htmlParsed, "//title", xmlValue)
htmlParsed[10]
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
xData[10]
content[10]
htmlCode[10]
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
xData <- getURL(fileURL)
class(xData)
xData
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "tempfile.csv")
test <- read.csv("tempfile.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", "tempfile.txt")
test <- read("tempfile.txt")
test <- read.csv("tempfile.txt", sep=" ")
?read.csv
test <- read.csv("tempfile.txt", sep="\t", skip=3)
test <- read.csv("tempfile.txt", sep="\t", skip=4)
View(test)
test <- read.csv("tempfile.txt", sep=" ", skip=4)
View(test)
?read.fwf
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
test <- read.fwf("tempfile.txt", w, sep=" ", skip=4)
test <- read.fwf("tempfile.txt", w, skip=4)
View(test)
View(d)
test <- read.fwf("tempfile.txt", w, skip=4, col.names=colNames)
View(test)
test <- read.fwf(url, w, skip=4, col.names=colNames)
test <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
sum(d[, 4])
sum(d[, 8])
w <- c(12, 7, 4, 9, 4, 9, 4, 9, 4)
test <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
test <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
test <- read.fwf(url, w, header=FALSE, skip=5, col.names=colNames)
w <- c(12, 7, 4, 9, 4, 9, 4, 9, 4)
test <- read.fwf(url, w, header=FALSE, skip=5, col.names=colNames)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
test <- read.fwf(url, w, header=FALSE, skip=5, col.names=colNames)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
test <- read.fwf(url, w, header=FALSE, skip=5, col.names=colNames)
setwd("~/Documents/RScripts/coursera_repo/week4Proj")
library(dplyr)
#Read in the separate data sets.
testDataX <- read.csv("UCI HAR Dataset/test/X_test.txt", sep="", header=FALSE)
trainingDataX <- read.csv("UCI HAR Dataset/train/X_train.txt", sep="", header=FALSE)
subjectTrain <- read.csv("UCI HAR Dataset/train/subject_train.txt", sep="", header=FALSE)
subjectTest <- read.csv("UCI HAR Dataset/test/subject_test.txt", sep="", header=FALSE)
testDataY <- read.csv("UCI HAR Dataset/test/y_test.txt", sep="", header=FALSE)
trainingDataY <- read.csv("UCI HAR Dataset/train/y_train.txt", sep="", header=FALSE)
#Join each training and test set
Subject <- rbind(subjectTrain, subjectTest)
# name the column subject
names(Subject) <- c("subject")
Activity <- rbind(trainingDataY, testDataY)
names(Activity) <- c("activity")
df <- rbind(trainingDataX, testDataX)
#Bind the columns of these datasets together
df <- cbind(Subject, Activity, df )
# features.txt file explains what the variables are
features <- read.csv("UCI HAR Dataset/features.txt", sep="", header=FALSE)
# has 561 observations each is a description of the 561 columns
# that were in the traning and test x datasets.
# change the column names in the dataframe accordingly
colnames <- as.character(features$V2)
names(df) <- c("subject", "activity", colnames)
# want to keep relavent columns ie those that have "mean" or "std" in the variable name.
# search for these in the column names returning column index for true
index_col_keep <- which(grepl("mean\\(\\)|std\\(\\)", names(df)))
# Only keep these columns and the activity and Subject columns
df  <- df[, c(1,2,index_col_keep)]
#names(df)
# Change the activity column to the activity name from activity_labels.txt
activity_lab <- read.csv("UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE)
names(activity_lab) <- c("activity", "activityName")
df <- merge(df, activity_lab, by="activity", all.x=TRUE)
#remove redundant activity column (keeping only the descriptive activityName column)
df$activity <- NULL
# names Avoid - and () in variable names  t and f stand for time or fequency domain
colnames <- names(df)
colnames <- gsub("^t", "time", colnames)
colnames <- gsub("^f", "freq", colnames)
colnames <- gsub("\\-mean\\(\\)", "Mean", colnames)
colnames <- gsub("\\-std\\(\\)", "Std", colnames)
colnames <- gsub("\\-X", "X", colnames)
colnames <- gsub("\\-Y", "Y", colnames)
colnames <- gsub("\\-Z", "Z", colnames)
#rename the df columns
names(df) <- colnames
write.table(df, file = "tidydata.txt", row.name = FALSE)
#create a second, independent tidy data set with the average
# of each variable for each activity and each subject.
# using dplyr
tidydata <- df %>%
group_by(activityName, subject) %>%
summarize_each(funs(mean)) %>%
arrange(subject)
write.table(tidydata, file = "averaged_tidydata.txt", row.name = FALSE)
View(df)
View(tidydata)
